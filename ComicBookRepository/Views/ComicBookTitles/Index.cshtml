@model PaginatedList<ComicBookTitle>

@{
    ViewData["Title"] = "Index";
}

<h1>Comic Book Titles</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<form asp-action="Index" method="get">
    <div class="form-actions no-color">
        <p>
            Find by name: <input type="text" name="SearchString" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NameSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">
                    @Html.DisplayNameFor(model => model[0].Title)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].FirstIssue)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].LastIssue)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].NumIssues)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].NumSpIssues)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].LimitedSeries)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                <a asp-controller="ComicBookDetails" asp-action="Index" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.Title)</a>
            </td>
            <td class="center">
                @Html.DisplayFor(modelItem => item.FirstIssue)
            </td>
            <td class="center">
                @Html.DisplayFor(modelItem => item.LastIssue)
            </td>
            <td class="center">
                @Html.DisplayFor(modelItem => item.NumIssues)
            </td>
            <td class="center">
                @Html.DisplayFor(modelItem => item.NumSpIssues)
            </td>
            <td class="center">
                @Html.DisplayFor(modelItem => item.LimitedSeries)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Next
</a>